{"ast":null,"code":"import * as api from \"../api\";\nimport { FETCH_ALL, UPDATE, CREATE, DELETE, LIKE } from \"../constants/actionTypes\";\nexport const getPosts = () => async dispatch => {\n  console.log(\"actions/posts.js: getPosts()\");\n\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = () => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  console.log(\"actions/posts.js: createPost()\");\n\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/User/web/MERN/client/src/actions/posts.js"],"names":["api","FETCH_ALL","UPDATE","CREATE","DELETE","LIKE","getPosts","dispatch","console","log","data","fetchPosts","type","payload","error","message","getPostsBySearch","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","e","likePost"],"mappings":"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","sourcesContent":["import * as api from \"../api\";\r\nimport {\r\n  FETCH_ALL,\r\n  UPDATE,\r\n  CREATE,\r\n  DELETE,\r\n  LIKE,\r\n} from \"../constants/actionTypes\";\r\nexport const getPosts = () => async (dispatch) => {\r\n  console.log(\"actions/posts.js: getPosts()\");\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const getPostsBySearch = () => async (dispatch) => {\r\n  try {\r\n    const {\r\n      data: { data },\r\n    } = await api.fetchPostsBySearch();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const createPost = (post) => async (dispatch) => {\r\n  console.log(\"actions/posts.js: createPost()\");\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}