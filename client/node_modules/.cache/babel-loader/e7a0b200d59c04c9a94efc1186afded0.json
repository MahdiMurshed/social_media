{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\web\\\\MERN\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Icon from \"./icon\";\nimport { AUTH } from \"../../constants/actionTypes\";\nimport useStyles from \"./styles\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert(\"Google Sign In was unsuccessful. Try again later\");\n\n  const handleChange = e => {};\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: isSignup ? \"Sign up\" : \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? \"Sign Up\" : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"1031674264154-8dsp8kh865c8g45ggsch3ieupj5lld2c.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 28\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleError,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? \"Already have an account? Sign in\" : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"QQZP/iapSYdao7xNRtK/xGu1aJY=\", false, function () {\n  return [useDispatch, useHistory, useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/User/web/MERN/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","useHistory","GoogleLogin","LockOutlinedIcon","Icon","AUTH","useStyles","Input","SignUp","isSignup","setIsSignup","dispatch","history","classes","showPassword","setShowPassword","handleShowPassword","switchMode","prevIsSignup","handleSubmit","e","preventDefault","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleError","alert","handleChange","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,SANF,QAOO,mBAPP;AAQA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMuB,kBAAkB,GAAG,MAAMD,eAAe,CAAC,CAACD,YAAF,CAAhD;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvBP,IAAAA,WAAW,CAAEQ,YAAD,IAAkB,CAACA,YAApB,CAAX;AACAH,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAOC,GAAP,IAAe;AACnC,UAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAApB;AACA,UAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,OAAnB;;AAEA,QAAI;AACFhB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAEvB,IAAR;AAAcwB,QAAAA,IAAI,EAAE;AAAEL,UAAAA,MAAF;AAAUE,UAAAA;AAAV;AAApB,OAAD,CAAR;AAEAd,MAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaA,QAAMG,WAAW,GAAG,MAClBC,KAAK,CAAC,kDAAD,CADP;;AAGA,QAAMC,YAAY,GAAIhB,CAAD,IAAO,CAAE,CAA9B;;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEP,OAAO,CAACwB,KAA1B;AAAiC,MAAA,SAAS,EAAE,CAA5C;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAExB,OAAO,CAACyB,MAA3B;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA,kBACG7B,QAAQ,GAAG,SAAH,GAAe;AAD1B;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAM,QAAA,SAAS,EAAEI,OAAO,CAAC0B,IAAzB;AAA+B,QAAA,QAAQ,EAAEpB,YAAzC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,qBACGV,QAAQ,iBACP;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,WADP;AAEE,cAAA,KAAK,EAAC,YAFR;AAGE,cAAA,YAAY,EAAE2B,YAHhB;AAIE,cAAA,SAAS,MAJX;AAKE,cAAA,IAAI;AALN;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,KAAK,EAAC,WAFR;AAGE,cAAA,YAAY,EAAEA,YAHhB;AAIE,cAAA,IAAI;AAJN;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA,0BAFJ,eAkBE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,eAFR;AAGE,YAAA,YAAY,EAAEA,YAHhB;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAwBE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,YAAY,EAAEA,YAHhB;AAIE,YAAA,IAAI,EAAEtB,YAAY,GAAG,MAAH,GAAY,UAJhC;AAKE,YAAA,kBAAkB,EAAEE;AALtB;AAAA;AAAA;AAAA;AAAA,kBAxBF,EA+BGP,QAAQ,iBACP,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,iBADP;AAEE,YAAA,KAAK,EAAC,iBAFR;AAGE,YAAA,YAAY,EAAE2B,YAHhB;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAyCE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,SAAS,EAAEvB,OAAO,CAAC2B,MALrB;AAAA,oBAOG/B,QAAQ,GAAG,SAAH,GAAe;AAP1B;AAAA;AAAA;AAAA;AAAA,gBAzCF,eAkDE,QAAC,WAAD;AACE,UAAA,QAAQ,EAAC,2EADX;AAEE,UAAA,MAAM,EAAGgC,WAAD,iBACN,QAAC,MAAD;AACE,YAAA,SAAS,EAAE5B,OAAO,CAAC6B,YADrB;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,SAAS,MAHX;AAIE,YAAA,OAAO,EAAED,WAAW,CAACE,OAJvB;AAKE,YAAA,QAAQ,EAAEF,WAAW,CAACG,QALxB;AAME,YAAA,SAAS,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBANb;AAOE,YAAA,OAAO,EAAC,WAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAeE,UAAA,SAAS,EAAEtB,aAfb;AAgBE,UAAA,SAAS,EAAEY,WAhBb;AAiBE,UAAA,YAAY,EAAC;AAjBf;AAAA;AAAA;AAAA;AAAA,gBAlDF,eAqEE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAC,UAAxB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEjB,UAAjB;AAAA,wBACGR,QAAQ,GACL,kCADK,GAEL;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArEF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2FD,CA/HD;;GAAMD,M;UAEad,W,EACDO,U,EACAK,S;;;KAJZE,M;AAiIN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nimport Icon from \"./icon\";\r\nimport { AUTH } from \"../../constants/actionTypes\";\r\nimport useStyles from \"./styles\";\r\nimport Input from \"./Input\";\r\n\r\nconst SignUp = () => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const switchMode = () => {\r\n    setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    setShowPassword(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    try {\r\n      dispatch({ type: AUTH, data: { result, token } });\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const googleError = () =>\r\n    alert(\"Google Sign In was unsuccessful. Try again later\");\r\n\r\n  const handleChange = (e) => {};\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {isSignup ? \"Sign up\" : \"Sign in\"}\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isSignup && (\r\n              <>\r\n                <Input\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  handleChange={handleChange}\r\n                  autoFocus\r\n                  half\r\n                />\r\n                <Input\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  handleChange={handleChange}\r\n                  half\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              handleChange={handleChange}\r\n              type=\"email\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              handleChange={handleChange}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              handleShowPassword={handleShowPassword}\r\n            />\r\n            {isSignup && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Repeat Password\"\r\n                handleChange={handleChange}\r\n                type=\"password\"\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n          </Button>\r\n          <GoogleLogin\r\n            clientId=\"1031674264154-8dsp8kh865c8g45ggsch3ieupj5lld2c.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <Button\r\n                className={classes.googleButton}\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                startIcon={<Icon />}\r\n                variant=\"contained\"\r\n              >\r\n                Google Sign In\r\n              </Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleError}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                {isSignup\r\n                  ? \"Already have an account? Sign in\"\r\n                  : \"Don't have an account? Sign Up\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}