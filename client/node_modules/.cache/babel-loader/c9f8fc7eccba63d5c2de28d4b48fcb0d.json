{"ast":null,"code":"import { FETCH_ALL, UPDATE, CREATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from \"../constants/actionTypes\";\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      console.log(\"Fetch by search\");\n      console.log(state.posts);\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n    // case FETCH_POST:\n    //   return { ...state, post: action.payload.post };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id == +action.payload._id) {\n            return action.payload;\n          }\n\n          return post;\n        })\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n} // export default function reducer(posts = [], action) {\n//   console.log(\"reducers/posts.js\");\n//   switch (action.type) {\n//     case DELETE:\n//       return posts.filter((post) => post._id !== action.payload);\n//     case CREATE:\n//       return [...posts, action.payload];\n//     case FETCH_ALL:\n//       return action.payload;\n//     case FETCH_BY_SEARCH:\n//       return action.payload;\n//     case UPDATE:\n//       return posts.map((post) =>\n//         post._id === action.payload._id ? action.payload : post\n//       );\n//     case LIKE:\n//       return posts.map((post) =>\n//         post._id === action.payload._id ? action.payload : post\n//       );\n//     default:\n//       return posts;\n//   }\n// }","map":{"version":3,"sources":["C:/Users/User/web/MERN/client/src/reducers/posts.js"],"names":["FETCH_ALL","UPDATE","CREATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST","COMMENT","reducer","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","console","log","post","map","_id","filter"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_ALL,\r\n  UPDATE,\r\n  CREATE,\r\n  DELETE,\r\n  LIKE,\r\n  FETCH_BY_SEARCH,\r\n  START_LOADING,\r\n  END_LOADING,\r\n  FETCH_POST,\r\n  COMMENT,\r\n} from \"../constants/actionTypes\";\r\nexport default function reducer(\r\n  state = { isLoading: true, posts: [] },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return { ...state, isLoading: true };\r\n    case END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n\r\n    case FETCH_BY_SEARCH:\r\n      console.log(\"Fetch by search\");\r\n      console.log(state.posts);\r\n      return { ...state, posts: action.payload };\r\n    case FETCH_POST:\r\n      return { ...state, post: action.payload };\r\n    // case FETCH_POST:\r\n    //   return { ...state, post: action.payload.post };\r\n    case LIKE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case COMMENT:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post._id == +action.payload._id) {\r\n            return action.payload;\r\n          }\r\n          return post;\r\n        }),\r\n      };\r\n    case CREATE:\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    case UPDATE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// export default function reducer(posts = [], action) {\r\n//   console.log(\"reducers/posts.js\");\r\n//   switch (action.type) {\r\n//     case DELETE:\r\n//       return posts.filter((post) => post._id !== action.payload);\r\n//     case CREATE:\r\n//       return [...posts, action.payload];\r\n//     case FETCH_ALL:\r\n//       return action.payload;\r\n//     case FETCH_BY_SEARCH:\r\n//       return action.payload;\r\n//     case UPDATE:\r\n//       return posts.map((post) =>\r\n//         post._id === action.payload._id ? action.payload : post\r\n//       );\r\n//     case LIKE:\r\n//       return posts.map((post) =>\r\n//         post._id === action.payload._id ? action.payload : post\r\n//       );\r\n//     default:\r\n//       return posts;\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}