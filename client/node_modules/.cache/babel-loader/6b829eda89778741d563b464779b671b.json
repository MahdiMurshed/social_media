{"ast":null,"code":"import * as api from \"../api\";\nexport const getPosts = () => async dispatch => {\n  console.log(\"actions/posts.js: getPosts()\");\n\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: \"FETCH_ALL\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  console.log(\"actions/posts.js: createPost()\");\n\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: \"CREATE\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: \"UPDATE\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: \"DELETE\",\n      payload: id\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: \"LIKE\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/User/web/MERN/client/src/actions/posts.js"],"names":["api","getPosts","dispatch","console","log","data","fetchPosts","type","payload","error","message","createPost","post","updatePost","id","deletePost","e","likePost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,UAAJ,EAAvB;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACD;AACF,CARM;AASP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACD;AACF,CATM;AAUP,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACa,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACD;AACF,CAPM;AAQP,OAAO,MAAMK,UAAU,GAAID,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACpD,MAAI;AACF,UAAMF,GAAG,CAACe,UAAJ,CAAeD,EAAf,CAAN;AACAZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEM;AAA3B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACVb,IAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMC,QAAQ,GAAIH,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAClD,MAAI;AACF,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACiB,QAAJ,CAAaH,EAAb,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,CAPM","sourcesContent":["import * as api from \"../api\";\r\nexport const getPosts = () => async (dispatch) => {\r\n  console.log(\"actions/posts.js: getPosts()\");\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: \"FETCH_ALL\", payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const createPost = (post) => async (dispatch) => {\r\n  console.log(\"actions/posts.js: createPost()\");\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: \"CREATE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({ type: \"UPDATE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: \"DELETE\", payload: id });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n    dispatch({ type: \"LIKE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}